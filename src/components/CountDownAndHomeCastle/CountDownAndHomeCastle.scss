
$transitionDurationInteger: 2000;
$transitionDuration: $transitionDurationInteger + 0ms;
$angle: -24deg;

:export {
  transitionDuration: $transitionDurationInteger;
}

.CountDownAndHomeCastle {

  width: 100%;
  min-height: 100vh;

  position: relative;
  z-index: 1;

  $width_of_castle: 75%;


  .castle {

    position: absolute;
    z-index: -1;
    top: 0;
    right: 0;

    height: 100%;
    width: $width_of_castle;

    transition: width $transitionDuration;

    background-image: url(./castle_background.png);

    background-position: right 50% bottom 0%;
    background-repeat: no-repeat;
    background-size: cover;

    /*  --- Overlay --- */

    &::before {
      content: "";
      display: block;
      position: absolute;
      z-index: -3;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      background-color: rgba(0,0,0,0.45);

      transition: background-color $transitionDuration;

    }

    /* --- skew separation (as an after element) ---- */
    overflow: hidden;

    &::after {
      content: "";
      display: block;
      position: absolute;
      z-index: -2;
      top: 0;
      right: 100%;
      width: 10000px;
      height: 100%;
      transform-origin: bottom;
    
    
      -webkit-transform: skewX($angle);
      -moz-transform: skewX($angle);
      -ms-transform: skewX($angle);
      -o-transform: skewX($angle);
      transform: skewX($angle);
    
      transition: transform 2s;
    
      background-color: #fff;
    
    }




  }

  .countdownSidePanel {

    border: 3px red solid;



    position: absolute;
    z-index: 0;
    top: 0;
    left: 0;

    height: 100%;

    width: 100%- $width_of_castle + 20% ;

    transition: width 0s $transitionDuration;

    > * {
      transition: transform $transitionDuration;
    }



  }

  &.home {

    .countdownSidePanel {

      width: 0;

      > * {
        transform: translate(-1000px);
      }

    }

    .castle {
    
      width: 100%;

      &::before {
        background-color: rgba(0,0,0,0);
      }

      &::after {
        
        $angle: 0deg;
        
        -webkit-transform: skewX($angle);
        -moz-transform: skewX($angle);
        -ms-transform: skewX($angle);
        -o-transform: skewX($angle);
        transform: skewX($angle);
        
      }
      

    }

  }

  


}


